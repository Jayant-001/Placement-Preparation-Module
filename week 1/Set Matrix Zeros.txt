class Solution {
private:
    void oneToZero(vector<vector<int>> &matrix, int row, int col) {
        
        int m = matrix.size();
        int n = matrix[0].size();
        for(int i = 0; i < m; i++) 
            matrix[i][col] = 0;
        
        for(int i = 0; i < n; i++)
            matrix[row][i] = 0;
        
    }
    vector<vector<int>> findZero(vector<vector<int>> matrix) {
        
        vector<vector<int>> zeros;
        int m = matrix.size();
        int n = matrix[0].size();
        for(int i = 0; i < m; i++) {
            for(int j = 0; j < n; j++) {
                
                if(matrix[i][j] == 0)
                    zeros.push_back({i, j});
            }
        }
        return zeros;
    }
public:
    void setZeroes(vector<vector<int>>& matrix) {
        
        vector<vector<int>> zeros = findZero(matrix);
        
        for(auto i : zeros) {
            oneToZero(matrix, i[0], i[1]);
            // cout << i[0] << " " << i[1] << endl;
        }
        
    }
};